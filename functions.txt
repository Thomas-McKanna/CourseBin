- search_for_submission
// Uses search parameters to return submissions
Input: Institution name, optional: course name and number, professor, semester, user, what to sort by 
Steps: Check if there any institution names that match the searched institution name
      Check if there any course names and numbers that match the searched course name and number
      Check if there any professor names that match the searched professor name
      Check if there any usernames that match the searched username
      Retrieve information from institution table, course table, and submission table
      Match checked information to join of tables
      Display search results

- get_content
// Given a submission, returns the content associated with it
Input: none
Steps: 

- add_user
// Adds a user
Input: 
Steps:

- rate
// When the user rates a piece of content, it gets recorded
Input:
Steps:

- add_institution
// Adds Institution to database
Input: Institution name, city, state, country
Steps: check if institution name does not exist in institution table
       if the institution does not exist add institution to the institution table

- add_class
// Adds class to database
Input:
Steps:

- upload_submission
// Uploads a submission
Input: institution name, course name(department, course number), projessor, semester
Steps: 

- delete_submission
// Deletes a submission
Input:
Steps:

- modify_submission
// Modifies a submission
Input:
Steps:

- merge_courses
// If two courses refer to the same course, this offers ability to merge them
Input:
Steps:
